@PACKAGE_INIT@

# if NOT(TARGET @PROJECT_NAME@::@PROJECT_NAME@)

set(_supported_components @WORDSEARCH_SOLVERS@)

# As per
# https://cmake.org/cmake/help/latest/guide/importing-exporting/index.html#adding-components
# I don't understand why we don't raise an error here, if a requested component isn't found

# For now, because I'm fed up of cmake and can't get components to work
# ie. build project with trie and dictionary_std_vector
# then use it via
# find_package(wordsearch_solver REQUIRED COMPONENTS trie)
# complains about missing dictionary_std_vector required from the auto generated
# wordsearch_solver.cmake file
#
# Just force all components

if (NOT "" STREQUAL "${@PROJECT_NAME@_FIND_COMPONENTS}")
    message(FATAL_ERROR "Use of COMPONENTS is unsupported")
endif()

# Include utility first, other packages may depend on it
include("${CMAKE_CURRENT_LIST_DIR}/utility/utility-targets.cmake")

foreach(_comp ${_supported_components})
    if (NOT _comp IN_LIST _supported_components)
        set(@PROJECT_NAME@_FOUND False)
        set(@PROJECT_NAME@_NOT_FOUND_MESSAGE "Unsupported component: ${_comp}")
    endif()
    message("Including ${CMAKE_CURRENT_LIST_DIR}/${_comp}/${_comp}-targets.cmake")
    include("${CMAKE_CURRENT_LIST_DIR}/${_comp}/${_comp}-targets.cmake")
endforeach()

include("${CMAKE_CURRENT_LIST_DIR}/solver/solver-targets.cmake")

include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake")

check_required_components(@PROJECT_NAME@)
